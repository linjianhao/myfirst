<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<!--此处有个dtd约束是mybatis-3-config.dtd。并且这个全局配置文件名字是不固定的-->
<configuration>
    <!--这部分是引入一个jdbc文件，里面讲数据库连接四个参数封装起来了，下面通过${}获取对应的参数
    jdbc.properties文件可以不用建也行，直接将四个参数注入value中-->
    <properties resource="jdbc.properties"/>
    <!--typeAliases是为了减少类名的长度来设置的。-->
    <typeAliases>
        <!--别名 类名 或者 类名首字母小写 UserDo 或者 userDo 推荐使用 -->
        <!-- <typeAlias type="com.fz.mybatis.daoEntify.User" alias="UserDo"/>-->
        <!--当要起别名的文件过多时，所有的实体类在一个包下时，可以通过下面的方式添加，其别名就是相应的类名-->
        <package name="com.fz.mybatis.daoDo"/>
    </typeAliases>
    <environments default="development">
        <environment id="development">
            <transactionManager type="JDBC"/>
            <dataSource type="POOLED">
                <property name="driver" value="${driver}"/>
                <property name="url" value="${url}"/>
                <property name="username" value="${username}"/>
                <property name="password" value="${password}"/>
            </dataSource>
        </environment>
    </environments>
    <mappers>
        <!--重要 1.当使用扫描的时候，扫描的是xml，而不是Mapper接口-->
        <!--重要 2.当单独扫描Mapper接口时，且Mapper接口与xml不在同一目录时，会报错-->
        <!--重要 3.当单独扫描xml映射文件时，则是正确的，因我们配置了namespace就是Mapper接口的全路径类名-->
        <!--<mapper resource="mapper/UserMapper.xml"/>-->
        <mapper resource="mapper1/UserMapper.xml"/>
        <!-- 通过mapper元素的resource属性可以指定一个相对于类路径的Mapper.xml文件 -->
        <!--<mapper resource="com/fengze/mybatis/mapper/UserMapper.xml"/>-->
        <!-- 通过package元素将会把指定包下面的所有Mapper接口进行注册 -->
        <!--<package name="com.fengze.mybatis.mapper"/>-->
        <!-- 通过mapper元素的url属性可以指定一个通过URL请求道的Mapper.xml文件 -->
        <!--<mapper url="file:///E:/UserMapper.xml"/>-->
        <!-- 通过mapper元素的class属性可以指定一个Mapper接口进行注册 -->
        <!--<mapper class="com.fengze.mybatis.mapper.UserMapper"/>-->
    </mappers>
</configuration>